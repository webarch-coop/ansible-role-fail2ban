# Copyright 2018-2023 Chris Croome
#
# This file is part of the Webarchitects Fail2ban Ansible role.
#
# The Webarchitects Fail2ban Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Fail2ban Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Fail2ban Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Fail2ban configuration file
  block:

    - name: Set a fact for the fail2ban backup amd broken file extension
      ansible.builtin.set_fact:
        fail2ban_backup_extension: "{{ '%Y%m%d_%H%M%S' | ansible.builtin.strftime }}.bak"
        fail2ban_broken_extension: "{{ '%Y%m%d_%H%M%S' | ansible.builtin.strftime }}.broken"

    - name: Check if the file exists
      ansible.builtin.stat:
        path: "{{ fail2ban_config_file.path }}"
      register: fail2ban_config_file_path

    - name: Delete the file, creating a backup, when it is set to be absent
      ansible.builtin.command: "mv {{ fail2ban_config_file.path }} {{ fail2ban_config_file.path }}.{{ fail2ban_backup_extension }}"
      args:
        creates: "{{ fail2ban_config_file.path }}.{{ fail2ban_backup_extension }}"
      when:
        - fail2ban_config_file_path.stat.exists | bool
        - fail2ban_config_file.state == "absent"

    - name: Read the file
      block:

        - name: Slurp the file
          ansible.builtin.slurp:
            path: "{{ fail2ban_config_file.path }}"
          register: fail2ban_config_file_b64encoded

        - name: Decode the base64 encoded version of the file and set a variable
          ansible.builtin.set_fact:
            fail2ban_config_file_existing: "{{ fail2ban_config_file_b64encoded['content'] | ansible.builtin.b64decode | community.general.jc('ini') }}"

        - name: Debug existing file variables
          ansible.builtin.debug:
            var: fail2ban_config_file_existing
            verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}0{% else %}1{% endif %}"

        - name: Backup present
          ansible.builtin.copy:
            src: "{{ fail2ban_config_file.path }}"
            dest: "{{ fail2ban_config_file.path }}.{{ fail2ban_backup_extension }}"
            remote_src: true
            mode: "0644"
            owner: root
            group: root
          changed_when: false

      when: fail2ban_config_file_path.stat.exists | bool

    - name: "Template the fail2ban config file at {{ fail2ban_config_file.path }}"
      ansible.builtin.template:
        src: fail2ban.conf.j2
        dest: "{{ fail2ban_config_file.path }}"
        backup: true
        mode: "0644"
        owner: root
        group: root
      notify: Restart fail2ban
      register: fail2ban_config_present

    - name: Debug fail2ban_config_present
      ansible.builtin.debug:
        var: fail2ban_config_present
        verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}0{% else %}1{% endif %}"

    - name: Test the fail2ban configuration and revert the file update if the config has changed  # noqa no-handler
      block:

        - name: Test fail2ban configuration
          ansible.builtin.command: fail2ban-client -t
          check_mode: false
          changed_when: false

      rescue:

        - name: "Move the broken configuration to {{ fail2ban_config_file.path }}.{{ fail2ban_broken_extension }}"  # noqa name[template]
          ansible.builtin.command: "mv {{ fail2ban_config_file.path }} {{ fail2ban_config_file.path }}.{{ fail2ban_broken_extension }}"
          args:
            creates: "{{ fail2ban_config_file.path }}.{{ fail2ban_broken_extension }}"

        - name: "Move the backup configuration back to {{ fail2ban_config_file.path }}"
          ansible.builtin.command: "mv {{ fail2ban_config_file.path }}.{{ fail2ban_backup_extension }} {{ fail2ban_config_file.path }}"
          args:
            removes: "{{ fail2ban_config_file.path }}.{{ fail2ban_backup_extension }}"

        - name: Fail as the configuration proposed didn't pass the test fail2ban-client -t
          ansible.builtin.fail:
            msg: >-
              The previoud configuration has been reverted to {{ fail2ban_config_file.path }} and the broken configuration has been
              saved to {{ fail2ban_config_file.path }}.{{ fail2ban_broken_extension }}

      when: fail2ban_config_present.changed | bool

  tags:
    - fail2ban
...
