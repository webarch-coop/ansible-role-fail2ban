# Copyright 2018-2023 Chris Croome
#
# This file is part of the Webarchitects Fail2ban Ansible role.
#
# The Webarchitects Fail2ban Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Fail2ban Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Fail2ban Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Skip the tasks in this role
  ansible.builtin.debug:
    msg: "The Fail2Ban role tasks are not being run since the fail2ban variable is false."
  when: not fail2ban | bool
  tags:
    - fail2ban

- name: Fail2ban
  block:

    - name: Validate Fail2ban variables
      ansible.builtin.include_tasks: validate.yml
      when: fail2ban_validate | bool

    - name: Packages present
      ansible.builtin.apt:
        pkg: "{{ fail2ban_pkgs }}"
        state: present
      notify: Restart fail2ban

    - name: Debug log files to be touched
      ansible.builtin.debug:
        var: fail2ban_logpath
      loop: "{{ fail2ban_config_files | community.general.json_query('[].conf.*.logpath|[][]') }}"
      loop_control:
        loop_var: fail2ban_logpath

    - name: Touch log files  # noqa: risky-file-permissions
      ansible.builtin.file:
        path: "{{ fail2ban_logpath }}"
        state: touch
        access_time: preserve
        modification_time: preserve
      loop: "{{ fail2ban_config_files | community.general.json_query('[].conf.*.logpath|[][]') }}"
      loop_control:
        loop_var: fail2ban_logpath
      when: fail2ban_config_files | community.general.json_query('[].conf.*.logpath|[][]') != []

    - name: Filters in place
      ansible.builtin.copy:
        src: "files/filter.d/{{ fail2ban_filter }}.conf"
        dest: "/etc/fail2ban/filter.d/{{ fail2ban_filter }}.conf"
        mode: "0644"
      loop: "{{ fail2ban_filters }}"
      loop_control:
        loop_var: fail2ban_filter
      notify: Restart fail2ban

    - name: Configure Fail2ban
      ansible.builtin.include_tasks: conf_file.yml
      loop: "{{ fail2ban_config_files }}"
      loop_control:
        loop_var: fail2ban_config_file
        label: "{{ fail2ban_config_file.path }}"

    - name: Test the fail2ban configuration
      ansible.builtin.command: fail2ban-client -t
      check_mode: false
      changed_when: false

    - name: Service fail2ban enabled started
      ansible.builtin.systemd_service:
        name: fail2ban
        enabled: true
        state: started

  when: fail2ban | bool
  tags:
    - fail2ban
...
